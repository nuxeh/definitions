name: linux-jetson-tk1
kind: chunk
configure-commands:
- make ARCH=arm64 defconfig
- scripts/config -d KERNEL_LZO
- scripts/config -e KERNEL_GZIP
- scripts/config -e NAMESPACES
- scripts/config -e PACKET
- scripts/config -e SATA_AHCI
- scripts/config -e ATA_GENERIC
- scripts/config -e HAVE_IDE
- scripts/config -d BLK_DEV_IDE_SATA
- scripts/config -e BTRFS_FS
- scripts/config -e BTRFS_FS_POSIX_ACL
- scripts/config -e DEVTMPFS
- scripts/config -e DEVTMPFS_MOUNT
- scripts/config -e CONFIG_FHANDLE
- scripts/config -e CGROUPS
- scripts/config -e AUTOFS4_FS
- scripts/config --set-str UEVENT_HELPER_PATH ''
- scripts/config -e EXT2_FS
- scripts/config -e EXT2_FS_XATTR
- scripts/config -e EXT2_FS_POSIX_ACL
- scripts/config -e EXT2_FS_SECURITY
- scripts/config -e EXT2_FS_XIP
- scripts/config -e EXT3_FS
- scripts/config -d EXT3_DEFAULTS_TO_ORDERED
- scripts/config -e EXT3_FS_XATTR
- scripts/config -e EXT3_FS_POSIX_ACL
- scripts/config -e EXT3_FS_SECURITY
- scripts/config -e EXT4_FS
- scripts/config -e EXT4_FS_XATTR
- scripts/config -e EXT4_FS_POSIX_ACL
- scripts/config -e EXT4_FS_SECURITY
- scripts/config -d EXT4_DEBUG
- scripts/config -d JBD_DEBUG
- scripts/config -d JBD2_DEBUG
- scripts/config -e BLK_DEV_LOOP
- scripts/config -d BLK_DEV_CRYPTOLOOP
- scripts/config --set-val BLK_DEV_LOOP_MIN_COUNT 8
- scripts/config -e IKCONFIG
- scripts/config -e IKCONFIG_PROC
- scripts/config -e SECCOMP
- scripts/config -d DEBUG_STACK_TRACE
- scripts/config -e NFSD
- scripts/config -e NFSD_V3
- scripts/config --set-str EXTRA_FIRMWARE_DIR "/lib/firmware/"
#- scripts/config -e MMC_DEBUG
- scripts/config -e ATA_VERBOSE_DEBUG
- scripts/config -e ATA_DEBUG
#- scripts/config -e NOUVEAU_PLATFORM_DRIVER
#- scripts/config -e DRM_TEGRA_STAGING
#- scripts/config -m CONFIG_USB_RTL8152
## Tegra
#- scripts/config -e CONFIG_ARCH_TEGRA_210_SOC
#- scripts/config -e CONFIG_PHY_TEGRA_XUSB
#- scripts/config -e CONFIG_USB_XHCI_TEGRA
#- scripts/config -d CONFIG_USB_HID
## New
#- scripts/config -e CONFIG_USB_RTL8152
#- scripts/config -e CONFIG_USB_USBNET
#- scripts/config -e CONFIG_USB_NET_AX8817X
#- scripts/config -e CONFIG_USB_NET_AX88179_178A
#- scripts/config -e CONFIG_USB_NET_CDCETHER
#- scripts/config -e CONFIG_USB_NET_CDC_NCM
#- scripts/config -e CONFIG_USB_NET_SMSC95XX
#- scripts/config -e CONFIG_USB_NET_NET1080
#- scripts/config -e CONFIG_USB_NET_CDC_SUBSET
#- scripts/config -e CONFIG_USB_BELKIN
#- scripts/config -e CONFIG_USB_ARMLINUX
#- scripts/config -e CONFIG_USB_NET_ZAURUS
#- scripts/config -e CONFIG_WLAN
#- scripts/config -e CONFIG_WIFI_CONTROL_FUNC
#- scripts/config -e CONFIG_BCMDHD_SDIO
#- scripts/config -e CONFIG_BCM4354
#- scripts/config -e CONFIG_BCMDHD_HW_OOB
#- scripts/config -e CONFIG_DHD_USE_SCHED_SCAN
#- scripts/config -e CONFIG_BCMDHD_CUSTOM_SYSFS_TEGRA
#- scripts/config -e CONFIG_BCMDHD_CUSTOM_NET_PERF_TEGRA
#- scripts/config -e CONFIG_IWLWIFI_OPMODE_MODULAR
#- scripts/config -e CONFIG_IWLWIFI_DEVICE_TESTMODE
#- scripts/config -e CONFIG_IWLWIFI_P2P
#- scripts/config -e CONFIG_USB_OTG
#- scripts/config -e CONFIG_USB_GADGET
#- scripts/config -e CONFIG_USB_TEGRA
#- scripts/config -e CONFIG_USB_ETH_RNDIS
#- scripts/config -m CONFIG_BCMDHD
#- scripts/config -m CONFIG_IWLWIFI
#- scripts/config -m CONFIG_IWLDVM
#- scripts/config -m CONFIG_IWLMVM
#- scripts/config -m CONFIG_USB_LIBCOMPOSITE
#- scripts/config -m CONFIG_USB_AUDIO
#- scripts/config -m CONFIG_USB_ETH
#- scripts/config -m CONFIG_USB_MASS_STORAGE
- yes '' | make ARCH=arm64 oldconfig
build-commands:
- make $MAKEFLAGS ARCH=arm64
- make modules
install-commands:
- mkdir -p "$DESTDIR"/boot
- cp arch/arm64/boot/Image "$DESTDIR"/boot/Image
- cp arch/arm64/boot/dts/nvidia/tegra210-p2371-2180.dtb "$DESTDIR"/boot/.
- make INSTALL_MOD_PATH="$DESTDIR" modules_install
- install -d "$DESTDIR$PREFIX/src/linux"
- |
  (
      printf 'Makefile\0'
      printf 'Module.symvers\0'
      find arch/arm64 -maxdepth 1 -name 'Makefile*' -print0
      find arch/arm64 \( -name 'module.lds' -o -name 'Kbuild.platforms' -o -name 'Platform' \) -print0
      find arch/arm64 \( -type d -a \( -name include -o -name scripts \) \) -o \
                               \! -type d -a \( -path '*include/*' -o -path '*scripts/*' \) -print0
      find include -name 'asm*' -prune -o -print0
      find include/asm-generic -print0
      find include/uapi -print0
      find scripts -print0
  ) | cpio -0pumd "$DESTDIR$PREFIX/src/linux"
system-integration:
  linux-jetson-tk1-misc:
    # This is required for any modules to work correctly. However, it depends
    # `depmod` from the 'kmod' chunk in the 'foundation' stratum, so it runs
    # conditionally on `depmod` existing to avoid breaking in
    # minimal-system-x86_64.
    00-depmod:
    - if which depmod; then (cd /lib/modules && for version in *; do depmod -a "$version"; done) fi
